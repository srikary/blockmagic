'use strict';

goog.provide('Blockly.Msg.jp');

goog.require('Blockly.Msg');

Blockly.Msg.CAT_MICROBIT_ACCEL = '加速度センサー';//'Accelerometer'
Blockly.Msg.CAT_MICROBIT_BUTTONS = 'ボタン';//'Buttons'
Blockly.Msg.CAT_MICROBIT_COMPASS = 'コンパス';//'Compass'
Blockly.Msg.CAT_MICROBIT_DISPLAY = 'ディスプレイ';//'Display'
Blockly.Msg.CAT_MICROBIT_IMAGE = 'イメージ';//'Image'
Blockly.Msg.CAT_MICROBIT_MICROBIT = 'Micro:Bit';//'Micro:Bit'
Blockly.Msg.CAT_MICROBIT_MUSIQUE = 'ミュージック';//'Music'
Blockly.Msg.CAT_MICROBIT_NEOPIXELS = 'Neopixels';//'Neopixels'
Blockly.Msg.CAT_MICROBIT_PINS = '入出力端子';//'Pins'
Blockly.Msg.CAT_MICROBIT_RADIO = '無線通信';//'Radio'
Blockly.Msg.CAT_MICROBIT_SPEECH = '音声';//'Speech'
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_MESSAGE0 = '加速度センサー X軸';//'Accelerometer X axis'
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_TOOLTIP = 'X軸の加速度を得ます。';//'Get the acceleration measurement in the X axis.'
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.get_x';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_MESSAGE0 = '加速度センサー Y軸';//
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_TOOLTIP = 'Y軸の加速度を得ます。';//
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.get_y';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_MESSAGE0 = '加速度センサー Z軸';//
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_TOOLTIP = 'Z軸の加速度を得ます。';//
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.get_z';
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_MESSAGE0 = 'ジェスチャーが認識された %1';//'Was gesture %1'
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_TOOLTIP = '前回の呼出し以降に指定した名前のジェスチャーが認識されたかにより True または False を返します。';//'Return True or False to indicate if the named gesture was active since the last check.'
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.was_gesture';
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_MESSAGE0 = 'ジェスチャーが認識されている';//Is gesture %1
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_TOOLTIP = '指定した名前のジェスチャーが認識されているかにより True または False を返します。';//'Return True or False to indicate if the named gesture is currently active.'
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.is_gesture';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_MESSAGE0 = 'ジェスチャーの履歴';//'Get gestures'
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_TOOLTIP = 'ジェスチャーの履歴をタプルで返します。タプルは古い順に並び、最新のものが最後の要素になります。この呼出しを行うとジェスチャーの履歴はクリアされます。';//'Return the gesture history. The most recent gesture is last. Also clears the gesture history.'
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.get_gestures';
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_MESSAGE0 = '現在のジェスチャー';//'Current gesture'
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_TOOLTIP = '現在のジェスチャーの名前を返します。';//'Return the name of the current gesture.'
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/accelerometer.html#microbit.accelerometer.current_gesture';
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_MESSAGE0 = 'ボタン %1 が押されている';//'Button %1 is pressed'
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_TOOLTIP = '指定のボタンが押されていれば True を返し、押されていなければ False を返します。';//'Return True if the specified button is pressed. Otherwise, return False.'
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/button.html#Button.is_pressed';
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_MESSAGE0 = 'ボタン %1 が押された';//'Button %1 was pressed'
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_TOOLTIP = 'デバイスが起動されてから、もしくは前回このメソッドが呼ばれてからボタンが(上から下へ)押されたかによって True または False を返します。このメソットを呼び出すとボタンが押されたかの状態がクリアされるので、再度このメソッドが True を返すようにするには、このメソッドを呼び出す前にボタンが押されなければなりません。';//'Return True if the specified button was pressed since the device started or the last time this was checked.'
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/button.html#Button.was_pressed';
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_MESSAGE0 = 'ボタン %1 を押した回数 ';//'Get number of presses for button %1'
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_TOOLTIP = 'ボタンを押した回数の合計を返し、返す前に回数をゼロにリセットします。';//'Return the running total of presses for the specified button, and resets this total to zero.'
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/button.html#Button.get_presses';
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/compass.html#microbit.compass.calibrate';
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_MESSAGE0 = '調整処理を開始';//'Calibrate compass'
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_TOOLTIP = '調整処理を開始します。指示メッセージがユーザにスクロールで示された後、LEDディスプレイ上に円を描くようデバイスを回転させます。';//'Start the callibration process to improve the accuracy of the compass.'
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_MESSAGE0 = '調整が成功したか';//'Compass is calibrated?'
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_TOOLTIP = '調整が成功したかどうかにより True または False を返します。';//'Returns True if the compass is calibrated, otherwise returns False.'
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/compass.html#microbit.compass.is_calibrated';
Blockly.Msg.MICROBIT_COMPASS_HEADING_MESSAGE0 = '方位';//'Compass heading'
Blockly.Msg.MICROBIT_COMPASS_HEADING_TOOLTIP = '３軸の磁力から計算された方位を返します。値は時計回りの角度を示す 0 から 360 までの整数で、0 は北となります。';//'Return the compass heading as a number between 0 to 360, representing the angle in degrees, clockwise, with north as 0.'
Blockly.Msg.MICROBIT_COMPASS_HEADING_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/compass.html#microbit.compass.heading';
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_MESSAGE0 = '磁場の強さ';//'Compass field strength'
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_TOOLTIP = 'デバイスのまわりの磁場の強さを示す整数値をナノテスラで返します。';//'Return a number indicating the magnitude of the magnetic field around the device.'
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/compass.html#microbit.compass.get_field_strength';
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_MESSAGE0 = 'X %1 列 Y %2 行の明るさ';//'Get brightness at X %1 Y %2'
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_TOOLTIP = 'x 列 y 行の LEDの明るさを返します。返り値は 0 (オフ)から 9 (明るい)までの整数値です。';//'Get the brightness of the LED at column X and row Y as a number between 0 (off) and 9 (brightest).'
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.get_pixel';
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_MESSAGE0 = 'X %1 列 Y %2 行の明るさを %3 に設定';//'Set pixel at X %1 Y %2 to brightness %3'
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_TOOLTIP = 'x 列 y 行の LEDの明るさを設定します。 value にはv 0 (オフ)から 9 (明るい)までの整数値を指定します。';//'Set the brightness of the LED at column X and row Y to a value which has to be a number between 0 (off) and 9 (brightest).'
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.set_pixel';
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.clear';
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_MESSAGE0 = 'ディスプレイをクリア';//'Clear display'
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_TOOLTIP = 'すべての LED の明るさを 0 (オフ)に設定します。';//'Clear the display - set the brightness of all LEDs to 0 (off).'
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_MESSAGE0 = 'イメージ %1 を表示';//'Show image %1'
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_TOOLTIP = 'イメージ image を表示します。';//'Show the referenced image on the display.'
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.show';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_MESSAGE0 = 'アニメーション %1 表示間隔 %2 ミリ秒 %3 待つ %4 %5 繰り返し %6 %7 クリア %8';//'Animate images %1 with a delay of %2 milliseconds between frames. %3 Wait %4 %5 Loop %6 %7 Clear %8'
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_TOOLTIP = 'value が文字列、浮動小数点数、整数であれば、文字/数字を順番に表示します。value がイメージの並びであれば、そのイメージの並びを順番に表示します。それぞれの文字、数字、イメージは delay ミリ秒間隔で表示されます。';//'Display the list of images as an animation with a certain delay between each frame. Indicate if you need to wait before continuing, continuously loop the animation and clear the display when finished.'
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.show';//
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_MESSAGE0 = 'メッセージ %1 をスクロール';//'Scroll message %1'
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_TOOLTIP = 'テキストをスクロールします。';//'Scroll the referenced text across the display.'
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.scroll';
Blockly.Msg.MICROBIT_DISPLAY_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.on';
Blockly.Msg.MICROBIT_DISPLAY_ON_MESSAGE0 = 'ディスプレイ　オン';//'Turn on display'
Blockly.Msg.MICROBIT_DISPLAY_ON_TOOLTIP = 'ディスプレイを有効にします。';//'Turns on the display.'
Blockly.Msg.MICROBIT_DISPLAY_OFF_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.off';
Blockly.Msg.MICROBIT_DISPLAY_OFF_MESSAGE0 = 'ディスプレイ　オフ';//'Turn off display'
Blockly.Msg.MICROBIT_DISPLAY_OFF_TOOLTIP = 'ディスプレイを無効にします。';//'Turn off the display.'
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_MESSAGE0 = 'ディスプレイ　オン?';//'Display is on?'
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_TOOLTIP = 'ディスプレイが有効であれば True 、無効であれば False を返します。';//'Return True if the display is on, otherwise return False.'
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/display.html#microbit.display.is_on';
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_MESSAGE0 = 'ビルトインイメージ %1';//'Built in image %1'
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_TOOLTIP = 'ビルトインイメージを特定します。';//'Specify one of the built-in images.'
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/image.html#attributes';
Blockly.Msg.MICROBIT_IMAGE_COPY_MESSAGE0 = 'イメージ %1 をコピー';//'Copy image %1'
Blockly.Msg.MICROBIT_IMAGE_COPY_TOOLTIP = 'イメージのコピーを生成します。';//'Create an exact copy of the referenced image.'
Blockly.Msg.MICROBIT_IMAGE_COPY_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/image.html#microbit.Image.copy';
Blockly.Msg.MICROBIT_IMAGE_INVERT_MESSAGE0 = 'イメージ %1 を反転';//'Invert image %1'
Blockly.Msg.MICROBIT_IMAGE_INVERT_TOOLTIP = '元のイメージのピクセルの明るさを反転した新しいイメージ返します。';//'Create a new image by inverting the brightness of the pixels in the referenced image.'
Blockly.Msg.MICROBIT_IMAGE_INVERT_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/image.html#microbit.Image.invert';
Blockly.Msg.MICROBIT_IMAGE_CREATE_MESSAGE0 = 'イメージを生成 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30';//'Create image %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30'
Blockly.Msg.MICROBIT_IMAGE_CREATE_TOOLTIP = '新しいイメージを生成';//'Create a new image.'
Blockly.Msg.MICROBIT_IMAGE_CREATE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/image.html#microbit.Image';
Blockly.Msg.MICROBIT_MICROBIT_PANIC_MESSAGE0 = 'パニックモード エラーコード %1';//'Panic with status code %1'
Blockly.Msg.MICROBIT_MICROBIT_PANIC_TOOLTIP = 'パニックモードに入ります。再起動が必要となります。引数 n にはステータスを示す 255 以下の整数を渡します';//'Enter panic mode to indicate something has gone wrong. Requires a restart. Pass in a number to indicate a status code.'
Blockly.Msg.MICROBIT_MICROBIT_PANIC_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/microbit.html#microbit.panic';
Blockly.Msg.MICROBIT_MICROBIT_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/microbit.html#microbit.reset';
Blockly.Msg.MICROBIT_MICROBIT_RESET_MESSAGE0 = '再起動';//'Reset micro:bit'
Blockly.Msg.MICROBIT_MICROBIT_RESET_TOOLTIP = ' ボードを再起動します。';//'Reset the micro:bit'
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_MESSAGE0 = 'スリープ %1 ミリ秒';//'Sleep %1 milliseconds'
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_TOOLTIP = '指定したミリ秒数だけ休止します。';//'Wait for a specified number of milliseconds before the next instruction.'
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/microbit.html#microbit.sleep';
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_MESSAGE0 = '経過時間';//'Running time'
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_TOOLTIP = 'micro:bit の電源が入ってから経過したミリ秒数を返します。';//'Get the number of milliseconds since the board was switched on or restarted.'
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/microbit.html#microbit.running_time';
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_MESSAGE0 = 'ボードの温度';//'Board temperature'
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_TOOLTIP = 'ボードの温度を摂氏で返します。';//'Get the temperature of the micro:bit in degrees Celcius.'
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/microbit.html#microbit.temperature';
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_MESSAGE0 = '内蔵メロディを再生 %1 %2 待つ %3 %4 繰り返し %5';//'Play built-in melody %1 %2 Wait %3 %4 Loop %5'
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_TOOLTIP = '内蔵メロディを再生します。待つ と 繰り返し を設定します。';//'Play one of the built-in melodies. Indicate if you need to wait before continuing or continuously loop the melody.'
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#built-in-melodies';
Blockly.Msg.MICROBIT_MUSIC_PITCH_MESSAGE0 = '周波数 %1 %2 を  %3 ミリ秒再生';//'Play pitch %1 %2 for  %3 milliseconds'
Blockly.Msg.MICROBIT_MUSIC_PITCH_TOOLTIP = '指定されたミリ秒間の整数周波数でピッチを再生します。たとえば、周波数を 440 に設定し、長さを 1000 に設定すると、標準のコンサート A が1秒間聞こえます。';//'Play a pitch at a certain number of cycles per second for a specified number of milliseconds.'
Blockly.Msg.MICROBIT_MUSIC_PITCH_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#music.pitch';
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_MESSAGE0 = '音名 %1 を再生　待つ %2 %3 繰り返し %4';//'Play notes %1 Wait %2 %3 Loop %4'
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_TOOLTIP = '音名で表記した曲を再生します。待つ と 繰り返し を設定します。';//'Play a list of notes expressed in the special music language. Indicate if you need to wait before continuing or continuously loop the melody.'
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#musical-notation';
Blockly.Msg.MICROBIT_MUSIC_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#music.reset';
Blockly.Msg.MICROBIT_MUSIC_RESET_MESSAGE0 = '音楽をリセット';//'Reset music'
Blockly.Msg.MICROBIT_MUSIC_RESET_TOOLTIP = '次のように属性の状態をリセットします:ticks = 4　bpm = 120　duration = 4　octave = 4';//'Reset all music related settings (current tempo, octave and duration) to default values.'
Blockly.Msg.MICROBIT_MUSIC_STOP_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#music.stop';
Blockly.Msg.MICROBIT_MUSIC_STOP_MESSAGE0 = '音楽を停止';//'Stop music'
Blockly.Msg.MICROBIT_MUSIC_STOP_TOOLTIP = '指定された端子のすべての音楽再生を停止します。';//'Stop all music playback.'
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_MESSAGE0 = 'テンポを設定 ティック数 %1 , %2 BPM';//'Set tempo with 1 beat the same as %1 ticks, at  %2 beats per minute'
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_TOOLTIP = '再生するためのおおよそのテンポを設定します。(整数で表される)ティック数 ticks が１ビートを構成します。各ビートは、1分あたりの特定の周波数で再生されます(これはよく知られた BPM - beats per minute - を整数で指定します)。';//'Set the speed (tempo) of playback. A certain number of ticks represents a beat. Each beat is to be played a certain number of times a minute (beats per minute or BPM).'
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#music.set_tempo';
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_MESSAGE0 = '現在のテンポ';//'Get current tempo'
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_TOOLTIP = '現在のテンポを整数のタプル (ticks, bpm) として取得します。';//'Gets current tempo information as two numbers: number of ticks per beat, and number of beats per minute (BPM).'
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/music.html#music.get_tempo';
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_MESSAGE0 = '初期化 %1 neopixel[s] %2 ピン %3';//'Initialise %1 neopixel[s] %2 on pin %3'
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_TOOLTIP = '端子 pin を介して制御する n 個の neopixel LED を持つボードを初期化します。';//'Make an object to control any attached neopixels. Specify the number of neopixels and the pin to which they are attached.'
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/neopixel.html#neopixel.NeoPixel';
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_MESSAGE0 = 'クリア %1';//'Clear neopixels on %1'
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_TOOLTIP = 'すべてのピクセルをクリアします。';//'Clear all neopixels controlled by the referenced neopixel object.'
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/neopixel.html#neopixel.NeoPixel.clear';
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_MESSAGE0 = '表示 %1';//'Show neopixels on %1'
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_TOOLTIP = 'ピクセルを表示します。更新が表示するには、これを呼び出す必要があります';//'Show / update all the neopixels controlled by the referenced neopixel object.'
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/neopixel.html#neopixel.NeoPixel.show';
Blockly.Msg.MICROBIT_NEOPIXEL_SET_MESSAGE0 = 'neopixels %1 ピクセルをセット 位置 %2 R %3 G %4 B %5';//'Using neopixels on %1 set pixel in position %2 with red %3 green %4 blue %5'
Blockly.Msg.MICROBIT_NEOPIXEL_SET_TOOLTIP = 'Use the referenced neopixel object to update the individual neopixel in a specific numbered position with a red, green, blue (RGB) value.';//'Use the referenced neopixel object to update the individual neopixel in a specific numbered position with a red, green, blue (RGB) value.'
Blockly.Msg.MICROBIT_NEOPIXEL_SET_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/neopixel.html#using-neopixels';
Blockly.Msg.MICROBIT_PIN_TOUCHED_MESSAGE0 = 'ピン %1 タッチされてる?';//'Pin %1 is touched?'
Blockly.Msg.MICROBIT_PIN_TOUCHED_TOOLTIP = '端子を指で触れている場合は True 、そうでない場合は False を返します。';//'Return True if the referenced pin is touched.'
Blockly.Msg.MICROBIT_PIN_TOUCHED_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/pin.html#microbit.MicroBitTouchPin.is_touched';
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_MESSAGE0 = 'アナログ値を読む ピン %1';//'Read analog on pin %1'
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_TOOLTIP = '端子の電圧を読み取り、0 (0V の意味）から 1023 (3.3V の意味)までの間の整数として返します。';//'Read analog value from the referenced pin.'
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/pin.html#microbit.MicroBitAnalogDigitalPin.read_analog';
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_MESSAGE0 = 'アナログ値 %1 を ピン %2 に出力';//'Write analog value %1 on pin %2'
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_TOOLTIP = 'PWM 信号を端子に出力します。';//'Write analog value to the referenced pin.'
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/pin.html#microbit.MicroBitAnalogDigitalPin.write_analog';
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_MESSAGE0 = 'デジタル値を読む ピン %1';//'Read digital value on pin %1'
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_TOOLTIP = '端子がハイの場合は 1 を返し、ローの場合は 0 を返します。';//'Read digital value (True or False) from the referenced pin.'
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/pin.html#microbit.MicroBitDigitalPin.read_digital';
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_MESSAGE0 = 'デジタル値 %1 を ピン %2 に出力';//'Write digital value %1 on pin %2'
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_TOOLTIP = '1 の場合はハイに設定し、0 の場合はローに設定します。';//'Write digital value (True or False) to the referenced pin.'
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/pin.html#microbit.MicroBitDigitalPin.write_digital';
Blockly.Msg.MICROBIT_RADIO_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.on';
Blockly.Msg.MICROBIT_RADIO_ON_MESSAGE0 = '無線通信をオン';//'Switch on radio'
Blockly.Msg.MICROBIT_RADIO_ON_TOOLTIP = '無線通信をオンにします。無線通信は電力を消費し、他で必要となるかもしれないメモリも占有するため、明示的に呼び出す必要があります。';//'Turn on the radio. This needs to be explicitly called since the radio draws power and takes up memory that you may otherwise need.'
Blockly.Msg.MICROBIT_RADIO_OFF_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.off';
Blockly.Msg.MICROBIT_RADIO_OFF_MESSAGE0 = '無線通信をオフ';//'Switch off radio'
Blockly.Msg.MICROBIT_RADIO_OFF_TOOLTIP = '無線通信をオフにして、電力とメモリを節約します。';//'Turn off the radio, thus saving power and memory.'
Blockly.Msg.MICROBIT_RADIO_CONFIG_MESSAGE0 = '無線通信の設定 最大長 %1 %2 待ち列 %3 %4 チャネル %5 %6 強度 %7 %8 データレート %9';//'Configure radio message length %1 %2 maximum queue length %3 %4 tuned to channel %5 %6 broadcast power %7 %8 data rate %9'
Blockly.Msg.MICROBIT_RADIO_CONFIG_TOOLTIP = '無線通信に関連するさまざまなキーワードベースの設定を構成します。';//'Configure the radio. The length defines how long an individual message can be. The queue specifies the number of messages that can be stored on the incoming message queue. The channel defines the frequency to which the radio is tuned. The power specifies the strength of the broadcast signal. The data rate indicates the speed at which data is transferred.'
Blockly.Msg.MICROBIT_RADIO_CONFIG_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.config';
Blockly.Msg.MICROBIT_RADIO_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.reset';
Blockly.Msg.MICROBIT_RADIO_RESET_MESSAGE0 = '無線通信リセット';//'Reset radio'
Blockly.Msg.MICROBIT_RADIO_RESET_TOOLTIP = '設定を既定値にリセットします';//'Reset the radio to default settings.'
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_MESSAGE0 = '文字列を送信 %1';//'Send message %1'
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_TOOLTIP = 'メッセージ文字列を送信します。';//'Broadcast a text message.'
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.send';
Blockly.Msg.MICROBIT_RADIO_RECEIVE_MESSAGE0 = '文字列を受信';//'Receive message'
Blockly.Msg.MICROBIT_RADIO_RECEIVE_TOOLTIP = '文字列を受信します。';//'Receive a message.'
Blockly.Msg.MICROBIT_RADIO_RECEIVE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/radio.html#radio.receive';
Blockly.Msg.MICROBIT_SPEECH_SAY_MESSAGE0 = '発声 %1';//'Say %1'
Blockly.Msg.MICROBIT_SPEECH_SAY_TOOLTIP = '英単語の並びを発声します。';//'Attempt to say English input.'
Blockly.Msg.MICROBIT_SPEECH_SAY_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/speech.html#speech.say';
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_MESSAGE0 = '発音 %1';//'Pronounce %1'
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_TOOLTIP = '音素を発声します。';//'Precisely pronounce phoneme input.'
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/speech.html#phonemes';
Blockly.Msg.MICROBIT_SPEECH_SING_MESSAGE0 = '歌う %1';//'Sing %1'
Blockly.Msg.MICROBIT_SPEECH_SING_TOOLTIP = 'ロボットのように音素を歌います。';//'Sing phonemes like a ROBOT.'
Blockly.Msg.MICROBIT_SPEECH_SING_HELPURL = 'https://microbit-micropython.readthedocs.io/ja/latest/speech.html#singing';
