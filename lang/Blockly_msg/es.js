// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.es');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añade un comentario";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifica el valor:";
Blockly.Msg.CLEAN_UP = "Limpia los bloques";
Blockly.Msg.COLLAPSE_ALL = "reduce todos los bloques";
Blockly.Msg.COLLAPSE_BLOCK = "reduce el bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "proporción";
Blockly.Msg.COLOUR_BLEND_TITLE = "mescla";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mezcla dos colores en una proporción dada (de 0.0 a 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://es.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Escoge un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Escoge un color al azar.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "colorea con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con una cantidad especifica de rojo, verde y azul. Los valores tienen que estar entre 0 y 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "abandona el bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "pasa a la iteración siguiente de bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sal ahora del bucle global.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Omite el resto de este bucle, y continua con la iteración siguiente.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Atención :  Este bloque no deberia ser utilizado en un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "por cada elemento %1 de la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Por cada elemento de una lista, asigna el valor del elemento a la variable '%1', después ejecuta las instrucciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "cuenta con %1 desde %2 haste %3 de %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Haz que la variable « %1 » tome los valores desde el número del principio hasta el final, incrementándose con el valor especificado, y ejecuta las instrucciones específicas.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Añade una condición de bloque Si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Añade una condición final captura todo el bloque si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Añade, suprime o reordena las secciones para reconfigurar el bloque si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sino";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sino si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es cierto, entonces ejecuta ciertas ordenes.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es cierto, entonces ejecuta el primer bloque de ordenes. Sino, ejecuta el segundo bloque de ordenes.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es cierto, entonces ejecuta el primer bloque de ordenes. Sino, si el segundo valor es cierto, ejecuta el segundo bloque de ordenes.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es cierto, entonces ejecuta el primer bloque de ordenes. Sino, si el segundo valor es cierto, ejecuta el segundo bloque de ordenes. Si ninguno de los valores es cierto, ejecuta el último bloque de ordenes.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://es.wikipedia.org/wiki/Bucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "ejecuta";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repite %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ejecuta las instrucciones diversas veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repite hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repite mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "mientras un valor sea falso, repite las instrucciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "mientras un valor sea cierto, repite las instrucciones.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Suprime todos los %1 bloques ?";
Blockly.Msg.DELETE_BLOCK = "Suprime el bloque";
Blockly.Msg.DELETE_VARIABLE = "Suprime la variable '%1'";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Queréis suprimir %1 usos de la variable '%2' ?";
Blockly.Msg.DELETE_X_BLOCKS = "Suprime %1 bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactiva el bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplica";
Blockly.Msg.ENABLE_BLOCK = "Activa el bloque";
Blockly.Msg.EXPAND_ALL = "Expande los bloques";
Blockly.Msg.EXPAND_BLOCK = "Expande el bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en linea";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crea una lista vacia";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devuelve una lista, de longitud 0, que no contenga ningún registro";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Añade, suprime, o reordena las secciones para reconfigurar este bloque de la lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crea una llista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Añade un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crea una lista con un número cualquiera de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# desde el final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtiene";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtiene y suprime";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "suprime";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Devuelve el elemento a la posición indicada en la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Suprime y devuelve el primer elemento de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Suprime y devuelve el elemento en la posición indicada en la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Suprime y devuelve el último elemento de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Suprime y devuelve un elemento al azar de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Suprime el primer elemento de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Suprime el elemento en la posición indicada en la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Suprime el último elemento de la lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Suprime un elemento al azar de la lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # desde el final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "desde #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el final";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtiene la sublista desde el principio";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtiene la sublista desde # desde del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtiene la sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de la lista.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 es el último elemento.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 es el primer elemento.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encuentra la primera ocurrencia del elemento.";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encuentra la última ocurrencia del elemento.";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el indice de la primera/última ocurrencia del elemento de la lista. Devuelve %1 si el elemento no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacio";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve cierto si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de la lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crea una lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea un lista consistente con el valor dado repetido el número de veces indicado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "inserta en";
Blockly.Msg.LISTS_SET_INDEX_SET = "configura";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al prinipio de la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Insererta el elemento en la posición indicada en la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Inserta el elemnto al final de la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento al azar en la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fija el primer elemento en la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Actualiza el elemento en la posición indicada en la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fija el último elemento en la lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fija un elemento al azar en la lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascendente";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descendente";
Blockly.Msg.LISTS_SORT_TITLE = "ordena %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Ordena una copia de la lista.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabético, ignorando les mayúsculas";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérico";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabético";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "crea una lista desde el texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "crea un texto desde la lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Reune una lista de textos en un solo texto, separados per un separador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Corta un texto en una lista de textos, cortando en cada separador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con separador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve al azar cierto o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "cierto";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matem%C3%A1tica";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve cierto y las dos entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve cierto si la primera entrada es mayor que la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve cierto si la primera entrada es mayor i igual que la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve cierto si la primera entrada es menor que la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve cierto si la primera entrada es menor o igual que la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve cierto si las dos entradas son diferentes.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve cierto si la entrada es falsa. Devuelve falso si la entrada es cierta.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve cierto si las dos entradas son ciertas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve cierto si al menos una de las entradas es cierta.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si cierto";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Verifica la condición en 'prueba'. Si es cierta, devuelve el valor 'si cierto' ; en caso contrario devuelve el valor 'si falso'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://fr.wikipedia.org/wiki/Arithmetique";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrementa %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añade un número a la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…),  ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "restringe %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Restringe un número a estar entre los límites especificados (incluidos).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Verifica si un número es par, impar, primo, entero, positivo, negativo o si es divisible per un cierto número. Devuelve cierto o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "modulo de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el módulo de la división euclidiana entre dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/N%C3%BAmero";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "media de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "moda de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándard de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve la media aritmética de los valores numéricos de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número mas grande de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número mas pequeño de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de elementos repetidos de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento al azar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándard de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números de la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracción aleatoria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve una fracción aleatoria entre 0.0 (incluida) y 1.0 (excluida).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio entre %1 y %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, incluidos.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondea";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondea al valor inferior";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondea al valor superior";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondea un número por arriba o por abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "valor absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve «e» a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo en base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve el opuesto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potència de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://es.wikipedia.org/wiki/Funci%C3%B3n_trigonom%C3%A9trica";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arccoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve la arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un angulo en grados (no en radianes).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un angulo en grados (no en radianes).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un angulo en grados (no en radianes).";
Blockly.Msg.NEW_VARIABLE = "Crea una variable";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre nuevo de la variable :";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriza las ordenes";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función '%1' definida por el utilizador.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función '%1' definida por el utilizador y usa el resultado.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crea '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe esta función";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "ejecuta";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "procedimento";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "En el procedimento";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea un procedimento sin retorno de datos.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con un reenvio de datos.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Atención : Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Resalta la definición de la función.";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es cierto, entonces devuelve un segon valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Atenció : Aquest bloc es podria usar sols en la definició d'una funció.";
Blockly.Msg.PROCEDURES_MUTATORARG_TYPE = "tipo";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nommbre";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añade una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "argumentos de la entrada";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añade, suprime, o reordena entradas en esta función.";
Blockly.Msg.REDO = "Vuelve a hacer";
Blockly.Msg.REMOVE_COMMENT = "Suprime un comentario";
Blockly.Msg.RENAME_VARIABLE = "Cambia el nombre a la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Cambia el nombre de todas las variables « %1 » en :";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añade el texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "en";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añade texto a la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en mayúscula al comienzo de cada palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia de texto en una caja diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtiene la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtiene la letra # desde el final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtiene la letra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtiene la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtiene una letra al azar";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra a la posición indicada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Añade un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "une";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Añade, suprime, o reordena les secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # desde el final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "al texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtiene la subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtiene la subcadena desde la letra # desde el final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtiene la subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción especificada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "al texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encuentra la primera ocurrencia de la cadena";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encuentra la última ocurrencia de la cadena";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última ocurrencia del primer texto en el segundo texto. Devuelve %1 si el texto no se ha encontrado.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacía";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve cierto si el texto dado està vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crea un texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crea una porción de texto añadiendo un número cualquiera de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (espacios incluidos) al texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "añade %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Añade el texto, el número o otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Pide un número al usuario.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Pide un texto al usuario.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "pide un número con un mensaje.";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "pide un texto con un mensaje.";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, una palabra, o una linea de texto.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "suprime los espacios desde los dos lados";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "suprime los espacios del lado izquierdo";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "suprime los espacios del lado derecho";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia de texto con los espacios suprimidos de un lado o de los dos.";
Blockly.Msg.TODAY = "Hoy";
Blockly.Msg.UNDO = "Deshaz";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crea 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET = "establece la variable %1 a %2";
Blockly.Msg.VARIABLES_SET_INIT = "inicializa la variable ";
Blockly.Msg.VARIABLES_SET_INIT_HELPURL = "https://www.arduino.cc/reference/en/language/variables/variable-scope-qualifiers/scope/";
Blockly.Msg.VARIABLES_SET_INIT_TOOLTIP = "set a variable to a first value, at the beginning of the programm";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crea 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual al valor de la entrada.";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Una variable llamada '%1' ya existe.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = "función";
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
