// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.de');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Kommentieren";
Blockly.Msg.CHANGE_VALUE_TITLE = "Wert ändern:";
Blockly.Msg.CLEAN_UP = "Blöcke aufräumen";
Blockly.Msg.COLLAPSE_ALL = "Blöcke verkleinern";
Blockly.Msg.COLLAPSE_BLOCK = "Block verkleinern";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Farbe 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Farbe 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "Verhältnis";
Blockly.Msg.COLOUR_BLEND_TITLE = "Überblenden";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Überblendet zwei Farben im Verhältnis (0:0 - 1:0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Wähle eine Farbe aus der Palette";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "Beliebige Zufallsfarbe";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Wähle eine zufällige Farbe.";
Blockly.Msg.COLOUR_RGB_BLUE = "blau";
Blockly.Msg.COLOUR_RGB_GREEN = "grün";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rot";
Blockly.Msg.COLOUR_RGB_TITLE = "Farbe mit";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Erstelle einen Farbton: die Werte werden dabei im Bereich von 0 - 100 für rot, grün und blau festgelegt.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "Wiederholung verlassen";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Fortsetzen mit der nächsten Wiederholung.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Verlassen der aktuellen Wiederholung";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Überspringe den Rest dieser Wiederholung und beginne von vorne.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Achtung: dieser Block ist nur Nutzbar innerhalb einer Wiederholung!";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "Für jedes Element %1 in der Liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Für jedes Element in der Liste, setze die Variable '%1' / setze einen Wert";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "Zähle %1 Von %2 Zu %3 Mit %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ergänze eine Bedingung zu dem 'Wenn' -Block.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ansonsten";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "oder wenn";
Blockly.Msg.CONTROLS_IF_MSG_IF = "Wenn";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Wenn die Bedingung erfüllt ist, dann führe den folgenden Schritt aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "Dann mache";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "Wiederhole %1 mal";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Wiederhole einige Schritte mehrmals.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Wiederhole bis";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Wiederhole solange";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Ist die Wiederholungsbedingung unwahr (false) dann wiederhole diese Wiederholung nochmal.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Ist die Wiederholungsbedingung zutreffend (true), dann wiederhole diese Widerholung nochmal";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";
Blockly.Msg.DELETE_BLOCK = "Lösche Block";
Blockly.Msg.DELETE_VARIABLE = "Lösche die '%1' Variable";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Delete %1 uses of the '%2' variable?";
Blockly.Msg.DELETE_X_BLOCKS = "Entferne %1 Blöcke";
Blockly.Msg.DISABLE_BLOCK = "Block ausschalten";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliziere Block";
Blockly.Msg.ENABLE_BLOCK = "Block wieder einschalten";
Blockly.Msg.EXPAND_ALL = "Vergrößere Blöcke";
Blockly.Msg.EXPAND_BLOCK = "Vergrößere Block";
Blockly.Msg.EXTERNAL_INPUTS = "Externe Eingabe";
Blockly.Msg.HELP = "Hilfe / Info";
Blockly.Msg.INLINE_INPUTS = "Eingebettete Eingabe";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "erzeuge leere Liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Gibt eine (absolut) leere Liste zurück";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "Liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ergänze, entferne oder ordne Bereiche in diesem Listenblock an.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "Erzeuge Liste mit";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ergänze Element zu der Liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Erzeuge neue Liste mit beliebiger Anzahl von Elementen";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "Erstes";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# vom Ende";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "hole";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hole und entferne";
Blockly.Msg.LISTS_GET_INDEX_LAST = "letztes";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "beliebiges";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "entferne";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Returns the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Removes and returns the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Removes the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 is the last item.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 is the first item.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserts the item at the specified position in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Sets the item at the specified position in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "Falsch";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Gibt entweder Wahr (HIGH) oder Falsch (LOW) zurück";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "Wahr";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "Verändere %1 mit %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "Grenze Wert ein: %1 Von %2 Bis %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Grenze einen Wert ein: zwischen Minimal- und Maximalwert.";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "ist teilbar durch";
Blockly.Msg.MATH_IS_EVEN = "ist gleich";
Blockly.Msg.MATH_IS_NEGATIVE = "ist negativ";
Blockly.Msg.MATH_IS_ODD = "ist ungerade";
Blockly.Msg.MATH_IS_POSITIVE = "ist positiv";
Blockly.Msg.MATH_IS_PRIME = "ist Primzahl";
Blockly.Msg.MATH_IS_TOOLTIP = "Prüft ob eine Zahl ist gerade, ungerade, eine Primzahl, eine Ganzzahl, positiv oder negativ oder Teilbar durch einen spezifischen Wert. Gibt wahr (true) oder unwahr (false) als Ergebnis zurück.";
Blockly.Msg.MATH_IS_WHOLE = "ist eine Ganzzahl";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "Restwert von %1 geteilt durch  %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Gib den Restwert der Division von zwei Werten zurück.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Eine Nummer.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "Durchschnitt der Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "Maximalwert der Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "Medianwert der Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "Minimalwert der Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Meistbenutzer Eintrag der Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "Zufälliges Listenelement (Arrayelement)";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "Standardabweichung eines Listenelements (Arrayelements)";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "Summe aller Listenelemente (Arrayelemente)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Rückgabe des mathematischen Durchschnitts der numerischen Werte aller Elemente in einer Liste (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Rückgabe der größten Nummer der numerischen Werte aller Elemente in einer Liste (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Rückgabe meisstbenutzen numerischen Werte aller Elemente in einer Liste (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Rückgabe der kleinsten Nummer der numerischen Werte aller Elemente in einer Liste (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Rückgabe der häufigsten Elemente in einer Liste (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Rückgabe eines zufällig ausgewählten Inhaltes eines Listenelements (Arrays)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Rückgabe der Standardabweichung der Listenelemente (Array)";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Rückgabe der Gesamtsumme aller numerischen Inhalte einer Liste (Array)";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "Zufallszahl";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Gibt einen zufälligen Wert zwischen 0.0 und 0.9 zurück.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "Zufällige Ganzzahl (integer) zwischen %1 und %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Gibt eine zufällige Ganzzahl (integer) zurück. Sie liegt zwischen den beiden Minumum- und Maximumwerten.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "Runden";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "abrunden";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "aufrunden";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "Absolute Zahl";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "Quadratwurzel";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "aCos";
Blockly.Msg.MATH_TRIG_ASIN = "aSin";
Blockly.Msg.MATH_TRIG_ATAN = "aTan";
Blockly.Msg.MATH_TRIG_COS = "Cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "Sin";
Blockly.Msg.MATH_TRIG_TAN = "Tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Gibt den Arkuskosinus einer Zahl zurück.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Gibt den Kosinus eines Grades zurück (kein Radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Gibt den Sinus eines Grades zurück (kein Radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Gibt den Tangens eines Grades zurück (kein Radiant).";
Blockly.Msg.NEW_VARIABLE = "Erstelle eine neue 'Variable'";
Blockly.Msg.NEW_VARIABLE_TITLE = "Gib der Variablen einen eigenen Namen:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "Setze einen Werk";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Starte die Nutzerfunktion '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Starte die Nutzerfunktion '%1' und verwende den Rückgabewert";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Erstelle '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Beschreibe diese Funktion...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "Mache folgendes:";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "zu";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Wiederholt folgende 'Funktion und gibt nichts zurück...'";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "gib zurück";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Wiederholt folgende 'Funktion' und gibt etwas zurück'";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Achtung: Diese Funktion hat doppelte Werte.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Wenn eine Bedingung erfüllt ist, gib folgendes zurück:";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";

Blockly.Msg.PROCEDURES_MUTATORARG_TYPE = "Eingabe Typ";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Eingabe Name";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Füge eine Eingabe zu der ''Funktion hinzu.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Eingaben";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ergänze, lösche oder sortiere Eingaben in dieser 'Funktion.";
Blockly.Msg.REDO = "Vorgang wiederholen";
Blockly.Msg.REMOVE_COMMENT = "Entferne Kommentar";
Blockly.Msg.RENAME_VARIABLE = "Umbenennen einer Variable";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Benenne '%1' Variable um zu:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "mit dem Text:";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "verbinde";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Füge Text zu dem Inhalt der Variablen '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "Umwandeln zu Kleinbuchstaben";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Umwandeln zu Überschriften";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "Umwandeln zu Großbuchstaben";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Gib eine Textkopie zurück mit veränderter Buchstabengröße.";
Blockly.Msg.TEXT_CHARAT_FIRST = "Hole den ersten Buchstaben";
Blockly.Msg.TEXT_CHARAT_FROM_END = "Hole Zeichen # vom Ende her gesehen";
Blockly.Msg.TEXT_CHARAT_FROM_START = "Hole Zeichen #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "im Text";
Blockly.Msg.TEXT_CHARAT_LAST = "Hole das letzte Zeichen";
Blockly.Msg.TEXT_CHARAT_RANDOM = "Hole ein zufälliges Zeichen";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Gibt das Zeichen an einer bestimmten Position zurück.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "zum Zeichen # vom Ende her gesehen";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "zum Zeichen #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "zum letzten Zeichen";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "eihttps://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "im Text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "Hole Ausschnitt vom Anfang des Textes / Zeichens...";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "Hole Ausschnitt ab dem Zeichen # vom Ende her gesehen";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "Hole Ausschnitt ab dem Zeichen #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Gibt einen bestimmten Ausschnitt des Textes wieder.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "im Text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "Finde den Text (beim ersten erscheinen)";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "Finde den Text vom Ende her (beim ersten erscheinen)";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Gib die Position des ersten oder letzten gefundenen Textausschnitts zurück. Wird nichts gefunden, dann gib  %1 zurück.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 ist leer";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Gibt 'true' (wahr) zurück, wenn der Textinhalt leer ist.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "Erstelle Text aus:";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Erstellt einen Textblock und verbindet dazu mehrere Textblöcke / Variablen miteinander.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "Länge von %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Gibt die Anzahl der Zeichen (inkl. Leerzeichen) zurück.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "Gib den Text aus: %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Gib den Text, die Zahl oder einen Wert aus.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Frage den Nutzer nach einer Zahl.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Frage den Nutzer nach einer Texteingabe.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Zeige dem Nutzer eine Textnachricht und Frage nach einer Zahleneingabe";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Zeige dem Nutzer eine Textnachricht";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Ein Buchstabe, ein Wort oder eine ganze Textzeile.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "Schneide Leerzeichen vorne und hinten ab.";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "Schneide Leerzeichen links ab";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "Schneide Leerzeichen rechts ab";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Gibt eine Kopie des Textes ohne Leerzeichen vorne oder hinten zurück.";
Blockly.Msg.TODAY = "Heute";
Blockly.Msg.UNDO = "Undo";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "Leervariable";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Erstelle 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Gibt den Inhalt der Variablen zurück.";
Blockly.Msg.VARIABLES_SET = "Setze die Variable";
Blockly.Msg.VARIABLES_SET_INIT = "Initialisiere";
Blockly.Msg.VARIABLES_SET_INIT_HELPURL = "https://www.arduino.cc/reference/en/language/variables/variable-scope-qualifiers/scope/";
Blockly.Msg.VARIABLES_SET_INIT_TOOLTIP = "set a variable to a first value, at the beginning of the programm";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setze einen festen Inhalt in die Variable ";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Die Variable mit dem Namen '%1' ist bereits vorhanden.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = "function";
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;